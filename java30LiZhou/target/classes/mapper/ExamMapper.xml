<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.ExamMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Exam" >
    <result column="stuid" property="stuid" jdbcType="INTEGER" />
    <result column="keid" property="keid" jdbcType="INTEGER" />
    <result column="examscore" property="examscore" jdbcType="INTEGER" />
    <result column="examtime" property="examtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stuid, keid, examscore, examtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.ExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="queryAllExam" resultType="com.accp.domain.Exam">
  	SELECT examscore,examtime FROM exam WHERE stuid = #{id}
  </select>
  
  <insert id="insertscore" parameterType="com.accp.domain.Exam">
  		INSERT INTO exam (stuid,keid,examscore) VALUE
  		<foreach collection="list" item="list" separator=",">
  			(#{list.stuid},#{list.keid},#{list.examscore})
  		</foreach>
  		
  </insert>
  
  <delete id="deleteByExample" parameterType="com.accp.domain.ExamExample" >
    delete from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Exam" >
    insert into exam (stuid, keid, examscore, 
      examtime)
    values (#{stuid,jdbcType=INTEGER}, #{keid,jdbcType=INTEGER}, #{examscore,jdbcType=INTEGER}, 
      #{examtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Exam" >
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuid != null" >
        stuid,
      </if>
      <if test="keid != null" >
        keid,
      </if>
      <if test="examscore != null" >
        examscore,
      </if>
      <if test="examtime != null" >
        examtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuid != null" >
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="keid != null" >
        #{keid,jdbcType=INTEGER},
      </if>
      <if test="examscore != null" >
        #{examscore,jdbcType=INTEGER},
      </if>
      <if test="examtime != null" >
        #{examtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.ExamExample" resultType="java.lang.Integer" >
    select count(*) from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam
    <set >
      <if test="record.stuid != null" >
        stuid = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.keid != null" >
        keid = #{record.keid,jdbcType=INTEGER},
      </if>
      <if test="record.examscore != null" >
        examscore = #{record.examscore,jdbcType=INTEGER},
      </if>
      <if test="record.examtime != null" >
        examtime = #{record.examtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam
    set stuid = #{record.stuid,jdbcType=INTEGER},
      keid = #{record.keid,jdbcType=INTEGER},
      examscore = #{record.examscore,jdbcType=INTEGER},
      examtime = #{record.examtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>